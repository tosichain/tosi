FROM golang:1.18 as go-ipfs-build

WORKDIR /app

RUN git clone "https://github.com/ipfs/kubo.git" -b v0.18.1
RUN cd kubo

WORKDIR /app/kubo

RUN go mod download

RUN CGO_ENABLED=0 make nofuse


FROM debian:stable-slim as kernel-base

ARG KERNEL_VERSION="5.5.19"
ARG KERNEL_URL="https://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/linux-${KERNEL_VERSION}.tar.gz"

WORKDIR /build/kernel

RUN apt update
RUN apt install -y \
  bc \
  bison \
  build-essential \
  cpio \
  flex \
  libelf-dev \
  libssl-dev \
  wget \
  gcc-x86-64-linux-gnu

RUN wget "$KERNEL_URL"
RUN tar xvzf "linux-${KERNEL_VERSION}.tar.gz" -C /build/kernel

FROM kernel-base as kernel-kvm
ARG KERNEL_VERSION="5.5.19"

WORKDIR "/build/kernel/linux-${KERNEL_VERSION}"

COPY src/verifier/validator-kernel-config "/build/kernel/linux-${KERNEL_VERSION}/.config"
RUN make ARCH=x86_64 CROSS_COMPILE=x86_64-linux-gnu- olddefconfig
RUN make -j $(nproc) ARCH=x86_64 CROSS_COMPILE=x86_64-linux-gnu- bzImage


FROM kernel-base as kernel-nokvm
ARG KERNEL_VERSION="5.5.19"

WORKDIR "/build/kernel/linux-${KERNEL_VERSION}"

COPY src/verifier/validator-kernel-q35-nokvm-config "/build/kernel/linux-${KERNEL_VERSION}/.config"
RUN make ARCH=x86_64 CROSS_COMPILE=x86_64-linux-gnu- olddefconfig
RUN make -j $(nproc) ARCH=x86_64 CROSS_COMPILE=x86_64-linux-gnu- bzImage


FROM rust:alpine3.16 AS merkle-tree-build

WORKDIR /src

RUN apk --no-cache add git musl-dev

RUN git clone https://github.com/tosichain/multithread-merkle-tree -b v1.0
 
WORKDIR /src/multithread-merkle-tree

RUN cargo fetch --locked

RUN cargo build --release

RUN cargo install --path . --root /opt/tosi

# =============================================================================
FROM alpine:3.16.0 as image

ARG KERNEL_VERSION="5.5.19"

RUN apk --no-cache add qemu-system-x86_64 qemu-accel-tcg-x86_64 python3 openssh-server e2tools xxd libgomp boost1.77-serialization py3-pip gcc musl-dev wget
COPY --from=go-ipfs-build "/app/kubo/cmd/ipfs/ipfs" "/usr/bin/ipfs"
RUN sed -i '/^#Port 22/s/^#//' /etc/ssh/sshd_config \
    && sed -i '/^#PasswordAuthentication/s/^#//' /etc/ssh/sshd_config \
    && sed -i '/^#PermitEmptyPasswords no/s/^#PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config \
    && sed -i '/^#PermitRootLogin prohibit-password/s/^#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    && echo "root:Docker!" | chpasswd

WORKDIR /app

RUN --mount=type=cache,target=/fetchcache8 wget -c -P /fetchcache8 https://web3.link/loader.squashfs && mkdir -p /data/prepopulate && cp /fetchcache8/* /data/prepopulate

COPY --from=kernel-kvm "/build/kernel/linux-${KERNEL_VERSION}/arch/x86/boot/bzImage" /app
COPY --from=kernel-kvm "/build/kernel/linux-${KERNEL_VERSION}/.config" /app
COPY --from=kernel-nokvm "/build/kernel/linux-${KERNEL_VERSION}/arch/x86/boot/bzImage" /app/bzImage-nokvm-q35
COPY --from=kernel-nokvm "/build/kernel/linux-${KERNEL_VERSION}/.config" /app/.config-nokvm
COPY --from=merkle-tree-build "/opt/tosi/bin/merkle-tree-hash" "/app//merkle-tree-hash"

RUN mkdir -p /opt/verifier
RUN pip3 install pycryptodome

COPY ./src/verifier/keccak256.py /app/keccak256.py
COPY ./src/verifier/log2.py /app/log2.py
COPY ./src/verifier/qemu-run-task.sh /app/qemu-run-task.sh
COPY ./src/verifier/qemu-test-task.sh /app/qemu-test-task.sh
COPY ./src/verifier/ssh.sh /app/ssh.sh
COPY ./src/verifier/grab-and-hash.sh /app/grab-and-hash.sh
COPY ./src/verifier/grab-dag-as-car-and-hash.sh /app/grab-dag-as-car-and-hash.sh
COPY ./src/verifier/prepopulate.sh /app/prepopulate.sh

RUN chmod +x /app/ssh.sh /app/grab-and-hash.sh /app/qemu-run-task.sh /app/grab-dag-as-car-and-hash.sh /app/prepopulate.sh

CMD [ "/app/ssh.sh" ]
