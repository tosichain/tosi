FROM golang:1.18 as go-ipfs-build

WORKDIR /app

RUN git clone "https://github.com/ipfs/kubo.git" -b v0.18.1
RUN cd kubo

WORKDIR /app/kubo

RUN go mod download

RUN CGO_ENABLED=0 make nofuse


FROM debian:stable-slim as kernel-base

ARG KERNEL_VERSION="5.5.19"
ARG KERNEL_URL="https://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/linux-${KERNEL_VERSION}.tar.gz"

WORKDIR /build/kernel

RUN apt update
RUN apt install -y \
  bc \
  bison \
  build-essential \
  cpio \
  flex \
  libelf-dev \
  libssl-dev \
  wget \
  gcc-x86-64-linux-gnu

RUN wget "$KERNEL_URL"
RUN tar xvzf "linux-${KERNEL_VERSION}.tar.gz" -C /build/kernel

FROM kernel-base as kernel-kvm
ARG KERNEL_VERSION="5.5.19"

WORKDIR "/build/kernel/linux-${KERNEL_VERSION}"

COPY src/verifier/validator-kernel-config "/build/kernel/linux-${KERNEL_VERSION}/.config"
RUN make ARCH=x86_64 CROSS_COMPILE=x86_64-linux-gnu- olddefconfig
RUN make -j $(nproc) ARCH=x86_64 CROSS_COMPILE=x86_64-linux-gnu- bzImage


FROM kernel-base as kernel-nokvm
ARG KERNEL_VERSION="5.5.19"

WORKDIR "/build/kernel/linux-${KERNEL_VERSION}"

COPY src/verifier/validator-kernel-q35-nokvm-config "/build/kernel/linux-${KERNEL_VERSION}/.config"
RUN make ARCH=x86_64 CROSS_COMPILE=x86_64-linux-gnu- olddefconfig
RUN make -j $(nproc) ARCH=x86_64 CROSS_COMPILE=x86_64-linux-gnu- bzImage


FROM rust:alpine3.16 AS merkle-tree-build

WORKDIR /src

RUN apk --no-cache add git musl-dev

RUN git clone https://github.com/tosichain/multithread-merkle-tree -b v1.0
 
WORKDIR /src/multithread-merkle-tree

RUN cargo fetch --locked

RUN cargo build --release

RUN cargo install --path . --root /opt/tosi

# =============================================================================
FROM alpine:3.16.0 as cartesi-build
RUN apk add --no-cache \
    build-base \
    autoconf \
    automake \
    cmake \
    curl \
    git \
    pkgconf \
    libtool \
    libgomp \
    boost-dev \
    openssl-dev \
    c-ares-dev \
    zlib-dev \
    readline-dev \
    lua5.3-dev \
    luarocks \
    patchelf \
    unzip \
    wget

RUN luarocks-5.3 install luasocket && \
    luarocks-5.3 install luasec && \
    luarocks-5.3 install luaposix && \
    luarocks-5.3 install lpeg && \
    luarocks-5.3 install md5 && \
    luarocks-5.3 install dkjson

RUN echo -e "#!/bin/sh\nsha1sum \"\$@\"" > /usr/bin/shasum && chmod +x /usr/bin/shasum

WORKDIR /build
ARG CARTESI_EMULATOR_REPO="https://github.com/cartesi/machine-emulator.git"

RUN git clone "${CARTESI_EMULATOR_REPO}"

WORKDIR "/build/machine-emulator"
RUN git checkout v0.11.1
RUN make submodules
RUN make -j$(nproc) dep && \
    make -j$(nproc) release=yes && \
    make install && \
    make clean && \
    rm -rf *

FROM alpine:3.16.0 as image

ARG KERNEL_VERSION="5.5.19"

RUN apk --no-cache add qemu-system-x86_64 qemu-accel-tcg-x86_64 openssh-server e2tools xxd libgomp boost1.77-serialization wget jq
RUN apk --no-cache add boost libstdc++ libgomp openssl c-ares zlib readline lua5.3
COPY --from=cartesi-build /opt/cartesi /opt/cartesi

COPY --from=cartesi-build /usr/local/lib/lua /usr/local/lib/lua
COPY --from=cartesi-build /usr/local/share/lua /usr/local/share/lua

COPY --from=go-ipfs-build "/app/kubo/cmd/ipfs/ipfs" "/usr/bin/ipfs"

RUN sed -i '/^#Port 22/s/^#//' /etc/ssh/sshd_config \
    && sed -i '/^#PasswordAuthentication/s/^#//' /etc/ssh/sshd_config \
    && sed -i '/^#PermitEmptyPasswords no/s/^#PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config \
    && sed -i '/^#PermitRootLogin prohibit-password/s/^#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    && echo "root:Docker!" | chpasswd

WORKDIR /app
COPY --from=ghcr.io/tosichain/standard-loader:master@sha256:531624c20bce8e19fd976462f682d1972c2ed9dd1da5ecc7f8eb69d1fddf9dee /loader.squashfs /data/prepopulate/loader.squashfs

RUN --mount=type=cache,target=/fetchcache36-car wget -c -P /fetchcache36-car https://web3.link/init_image.car && mkdir -p /data/prepopulate-car && cp /fetchcache36-car/* /data/prepopulate-car
RUN truncate -s 16384 /data/prepopulate/empty.16kb

COPY --from=kernel-kvm "/build/kernel/linux-${KERNEL_VERSION}/arch/x86/boot/bzImage" /app
COPY --from=kernel-kvm "/build/kernel/linux-${KERNEL_VERSION}/.config" /app
COPY --from=kernel-nokvm "/build/kernel/linux-${KERNEL_VERSION}/arch/x86/boot/bzImage" /app/bzImage-nokvm-q35
COPY --from=kernel-nokvm "/build/kernel/linux-${KERNEL_VERSION}/.config" /app/.config-nokvm
COPY --from=merkle-tree-build "/opt/tosi/bin/merkle-tree-hash" "/app//merkle-tree-hash"


RUN mkdir -p /opt/verifier

COPY ./src/verifier/qemu-run-task.sh /app/qemu-run-task.sh
COPY ./src/verifier/qemu-test-task.sh /app/qemu-test-task.sh
COPY ./src/verifier/qemu-test-cid.sh /app/qemu-test-cid.sh
COPY ./src/verifier/ssh.sh /app/ssh.sh
COPY ./src/verifier/grab-and-hash.sh /app/grab-and-hash.sh
COPY ./src/verifier/grab-dag-as-car-and-hash.sh /app/grab-dag-as-car-and-hash.sh
COPY ./src/verifier/prepopulate.sh /app/prepopulate.sh

RUN chmod +x /app/ssh.sh /app/grab-and-hash.sh /app/qemu-run-task.sh /app/grab-dag-as-car-and-hash.sh /app/prepopulate.sh /app/qemu-test-cid.sh

CMD [ "/app/ssh.sh" ]
