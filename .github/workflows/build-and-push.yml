name: build workflow

on:
  push:
    branches:
      - master
    paths:
      - "**"
env:
  REGISTRY: ghcr.io

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: "coordinator"
          image_name: "tosichain/tosi-coordinator"
          dockerfile: src/coordinator/Dockerfile
        - name: "client"
          image_name: "tosichain/tosi-client"
          dockerfile: src/client/Dockerfile
        - name: "verifier"
          image_name: "tosichain/tosi-verifier"
          dockerfile: Dockerfile-verifier
        
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Dump Contexts
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo "$RUNNER_CONTEXT"
      # git context is the default for actions but this will fail for docker in
      # a monorepo with multiple (docker) build contexts. As such, we must
      # checkout...
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Log in to GHCR
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image_name }}
      - name: Build
        id: build-image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Docker Cache Management
        # 'Temporary' cleanup fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
