services:
  descartes-deployer:
    build:
      context: ../hardhat-env
    command: "echo Build complete"
    profiles: [ "build" ]
    healthcheck:
      test: ["NONE"]

  coordinator-base:
    platform: linux/amd64
    build:
      context: ..
      dockerfile: src/coordinator/Dockerfile
    command: "echo Build complete"
    profiles: [ "build" ]

  # Coordinator node.
  coordinator:
    image: tosi-chain-coordinator-base:latest
    ports:
      - "127.0.0.1:20001:20001" # API
    environment:
      TOSI_MINTER_PUBKEY: "${TOSI_MINTER_PUBKEY-}"
      TOSI_STAKE_POOL_PUBKEY: "${TOSI_STAKE_POOL_PUBKEY-}"
      IPFS_HTTP_API_HOST: "${IPFS_HTTP_API_HOST-}"
      ETH_RPC: "${TOSI_ETH_RPC-}"
      ETH_WALLET_SECRET: "${TOSI_ETH_WALLET_SECRET-}"
      BLS_SECRET: "${TOSI_BLS_SECRET-}"
      OFFCHAIN_DA_COMMITEE_SAMPLE_SIZE: 2
      OFFCHAIN_DAS_REQUEST_BROADCAST_PERIOD: 300000 # 5 minutes
      OFFCHAIN_DAS_REQUEST_TIEMOUT: 60000 # 1 minute
      DB_HOST: "${TOSI_DB_HOST-}"
      DB_USER: "${TOSI_DB_USER-}"
      DB_PASSWORD: "${TOSI_DB_PASSWORD-}"
      DB_DB: "${TOSI_DB_DB-}"

    healthcheck:
      test: ["CMD-SHELL", "nc localhost 20001 < /dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
     
  client-base:
    platform: linux/amd64
    build:
      context: ..
      dockerfile: src/client/Dockerfile
    command: "echo Build complete"
    profiles: [ "build" ]

  verifier:
    platform: linux/amd64
    build:
      context: ..
      dockerfile: Dockerfile-verifier
    command: "echo Build complete"
    profiles: [ "build" ]

  # Local ethereum fork via ganache.
  localnet:
    image: tosi-chain-descartes-deployer:latest
    environment:
      MNEMONIC: "test test test test test test test test test test test junk"
    # fix later
    #volumes:
    #  - ./deps/descartes/deployments:/opt/cartesi/deployer/deployments
    ports:
      - "127.0.0.1:8545:8545"
    healthcheck:
      test: ["CMD-SHELL", "nc localhost 8545 < /dev/null" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
 
  db:
    image: mysql:debian
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: tosi
    volumes:
      - ../db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-pexample"]
      interval: 5s
      timeout: 5s
      retries: 20

  # IPFS instance 1
  ipfs:
    image: ipfs/kubo:v0.14.0
    command:
      [
        "daemon",
        "--migrate=true",
        "--enable-pubsub-experiment",
        "--enable-gc",
        "--routing=dhtclient"
      ]
      
  ipfs-public:
    extends:
      service: ipfs
    environment:
      IPFS_PROFILE: "server"
    ports:
      - "4001:4001"

  ipfs-public-2:
    extends:
      service: ipfs
    environment:
      IPFS_PROFILE: "server"
    ports:
      - "4005:4001"

  ipfs-private:
    extends:
      service: ipfs
    environment:
      IPFS_SWARM_KEY_FILE: /run/secrets/ipfs_swarm_key
    secrets:
      - ipfs_swarm_key

  # Descartes IPFS service 1
  descartes-ipfs:
    image: zippiehq/descartes-ipfs-service:zippie-0.2.0.3
    # volumes:
    #  - ./dapp_data_0:/opt/cartesi/srv/descartes
    # command: ["-g", "http://ipfs-1:5001"]
    healthcheck:
      test: ["CMD-SHELL", "nc localhost 50051 < /dev/null" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  verifier-service:
    image: tosi-chain-verifier:latest
    command:
      - "/app/ssh.sh"
    healthcheck:
      test: ["CMD-SHELL", "nc localhost 22 < /dev/null" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  client:
    image: tosi-chain-client-base:latest
    environment:
      TOSI_MINTER_PUBKEY: "87f2f8a1a5c2b002828045ed6b76ff5033ba9983b5856f35d7f4dfd6dbe76b773bd71cb7336dd5e5dbaea3a8d0f11df8"
      TOSI_STAKE_POOL_PUBKEY: "a9d5f32c309aa7c06d453688b605fd13dcff59c4ba68a1e122ca0765f2871ac628ddd6a91849f347eff1df1787730cb1"
      BLS_SEC_KEY: "4d5a78da4f26be1d69593b19fac383abe5344668ae5671b1e6a8d72c1507f509"
      IPFS_HTTP_API_HOST: "ipfs-2"
      IPFS_SERVICE_HOST_PORT: "descartes-ipfs-2:50051"
      STORAGE_DB_PATH: "./tosi-blockchain-db"
      COORDINATOR_PUB_KEY: "9514e6d6ea03d953a9b8ae4157e96f6523ff8f4819839842892ba180b9c2a6eb5bc23bf7e5a4ea64c0fba491bc7b5f78"
      COORDINATOR_RPC_SERVER_ADDR: "coordinator:20001"
      VERIFIER_HOST: "client-verifier"
      SYNC_ETH_RPC: "http://localnet:8545"
      SYNC_ETH_CLAIM_CONTRACT_ADDRESS: "0xB249f874F74B8d873b3252759Caed4388cfe2492" # UUPSProxy contract.
      SYNC_PERIOD: 10000 # 10 seconds
      API_PORT: 30001
      ROLE_IS_DA_VERIFIER: false
      DB_HOST: "db-2"
      DB_USER: "root"
      DB_PASSWORD: "example"
      DB_DB: "tosi"

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:30001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s