{% set nodeConfigDir = ["./docker-compose/config/", composeFileName, "/"] | join %}

version: "3.3"
secrets:
  ipfs_swarm_key:
    file: swarm.key

services:

  localnet-base:
    extends:
      file: docker-compose/base.yml
      service: localnet-base

  verifier-service-base:
    extends:
        file: docker-compose/base.yml
        service: verifier-service-base

  coordinator-base:
    extends:
        file: docker-compose/base.yml
        service: coordinator-base

  client-base:
    extends:
      file: docker-compose/base.yml
      service: client-base


  localnet:
    extends:
      file: docker-compose/base.yml
      service: localnet
    {% if simulateTestnet %}
      command: ["npx", "hardhat", "node", "--fork", "${ALCHEMY_ARBITRUM_GOERLI_RPC}"]
    {% endif %}

  coordinator-db:
    extends:
      file: docker-compose/base.yml
      service: db

  coordinator-ipfs:
    extends:
      file: docker-compose/base.yml
      service: ipfs-private
    ports:
      - "127.0.0.1:50011:5001" # For integration tests.

  coordinator:
    image: tosi-chain-coordinator-base:latest
    depends_on:
      localnet:
        condition: service_healthy
      coordinator-db:
        condition: service_healthy
      coordinator-ipfs:
        condition: service_healthy
    links:
      - localnet
      - coordinator-db
      - coordinator-ipfs
    ports:
      - "127.0.0.1:{{ coordinatorRpcPort }}:{{ coordinatorRpcPort }}" # For integration tests.
    volumes:
      - type: bind
        source: {{ [nodeConfigDir, "coordinator.yml"] | join }}
        target: "/config/tosi-coordinator.yml"
    healthcheck:
      test: ["CMD-SHELL", "nc localhost {{ coordinatorRpcPort }} < /dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  client-db:
    extends:
      file: docker-compose/base.yml
      service: db

  client-ipfs:
     extends:
      file: docker-compose/base.yml
      service: ipfs-private

  client-verifier-service:
    extends:
      file: docker-compose/base.yml
      service: verifier-service

  client:
    image: tosi-chain-client-base:latest
    depends_on:
      coordinator:
        condition: service_healthy
      client-db:
        condition: service_healthy
      client-ipfs:
        condition: service_healthy
    links:
      - coordinator
      - client-db
      - client-ipfs
      - client-verifier-service
    ports:
      - "127.0.0.1:{{ clientRpcPort }}:{{ clientRpcPort }}" # For integration tests.
    volumes:
      - type: bind
        source: {{ [nodeConfigDir, "client.yml"] | join }}
        target: "/config/tosi-client.yml"
    healthcheck:
      test: ["CMD-SHELL", "nc localhost {{ clientRpcPort }} < /dev/null" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  {% for i in range(1, verifierCount+1) %}
  {% set verifierName = ["verifier-", i | string] | join %}
  {{ verifierName }}-db:
    extends:
      file: docker-compose/base.yml
      service: db

  {{ verifierName }}-ipfs:
    extends:
      file: docker-compose/base.yml
      service: ipfs-private

  {{ verifierName }}-verifier-service:
    extends:
      file: docker-compose/base.yml
      service: verifier-service

  {{ verifierName }}:
    image: tosi-chain-client-base:latest
    depends_on:
      coordinator:
        condition: service_healthy
      {{ verifierName }}-db:
        condition: service_healthy
      {{ verifierName }}-ipfs:
        condition: service_healthy
    links:
      - coordinator
      - {{ verifierName }}-db
      - {{ verifierName }}-ipfs
      - {{ verifierName }}-verifier-service
    ports:
      - "127.0.0.1:{{ clientRpcPort + i }}:{{ clientRpcPort }}" # For integration tests.
    volumes:
      - type: bind
        source: {{ [nodeConfigDir, verifierName,  ".yml"] | join }}
        target: "/config/tosi-client.yml"
  {% endfor %}
