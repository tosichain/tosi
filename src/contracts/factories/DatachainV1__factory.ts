/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DatachainV1, DatachainV1Interface } from "../DatachainV1";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BlockSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockIndex",
        type: "uint256",
      },
    ],
    name: "blockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    name: "calculateRootFromPowerOfTwo",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "coordinatorNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockIndex",
        type: "uint256",
      },
    ],
    name: "getBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockIndex",
        type: "uint256",
      },
    ],
    name: "getMerkleHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coordinatorNode",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCoordinatorNode",
        type: "address",
      },
    ],
    name: "setCoordinatorNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_block",
        type: "bytes",
      },
    ],
    name: "submitBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516123ca61011960003960008181610339015281816103820152818161040a0152818161044a01526104c601526123ca6000f3fe6080604052600436106100fe5760003560e01c806382b0eab811610095578063b33232b011610064578063b33232b01461028f578063c4d66de8146102af578063d5107381146102cf578063df857756146102ef578063f2fde38b1461030f57600080fd5b806382b0eab8146101fb57806385df51fd1461021b5780638da5cb5b14610248578063aaf10f421461027a57600080fd5b806357e871e7116100d157806357e871e71461018d5780636c4f6ba9146101a3578063715018a6146101b95780637f350924146101ce57600080fd5b80633659cfe61461010357806347e26f1a146101255780634f1ef2861461016557806352d1902d14610178575b600080fd5b34801561010f57600080fd5b5061012361011e366004611730565b61032f565b005b34801561013157600080fd5b5061015261014036600461174b565b600090815260ce602052604090205490565b6040519081526020015b60405180910390f35b6101236101733660046117ab565b610400565b34801561018457600080fd5b506101526104b9565b34801561019957600080fd5b5061015260c95481565b3480156101af57600080fd5b5061015260cb5481565b3480156101c557600080fd5b5061012361056c565b3480156101da57600080fd5b506101526101e936600461174b565b600090815260cd602052604090205490565b34801561020757600080fd5b50610152610216366004611851565b610580565b34801561022757600080fd5b5061015261023636600461174b565b600090815260cc602052604090205490565b34801561025457600080fd5b506033546001600160a01b03165b6040516001600160a01b03909116815260200161015c565b34801561028657600080fd5b50610262610714565b34801561029b57600080fd5b506101236102aa366004611730565b610723565b3480156102bb57600080fd5b506101236102ca366004611730565b61074d565b3480156102db57600080fd5b506101236102ea3660046118f7565b610881565b3480156102fb57600080fd5b5060ca54610262906001600160a01b031681565b34801561031b57600080fd5b5061012361032a366004611730565b610994565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103805760405162461bcd60e51b815260040161037790611969565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103b2610a0a565b6001600160a01b0316146103d85760405162461bcd60e51b8152600401610377906119b5565b6103e181610a26565b604080516000808252602082019092526103fd91839190610a2e565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104485760405162461bcd60e51b815260040161037790611969565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661047a610a0a565b6001600160a01b0316146104a05760405162461bcd60e51b8152600401610377906119b5565b6104a982610a26565b6104b582826001610a2e565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105595760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610377565b5060008051602061234e83398151915290565b610574610b9e565b61057e6000610bf8565b565b600061058c8251610c4a565b6105d85760405162461bcd60e51b815260206004820152601860248201527f6172726179206c656e206e6f7420706f776572206f66203200000000000000006044820152606401610377565b815160010361060357816000815181106105f4576105f4611a01565b60200260200101519050919050565b600060018351901c67ffffffffffffffff81111561062357610623611764565b60405190808252806020026020018201604052801561064c578160200160208202803683370190505b50905060005b83518110156106fe5783818151811061066d5761066d611a01565b6020026020010151848260016106839190611a2d565b8151811061069357610693611a01565b60200260200101516040516020016106b5929190918252602082015260400190565b6040516020818303038152906040528051906020012082600183901c815181106106e1576106e1611a01565b60209081029190910101526106f7600282611a2d565b9050610652565b5061070881610580565b9392505050565b919050565b600061071e610a0a565b905090565b61072b610b9e565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff161580801561076d5750600054600160ff909116105b806107875750303b158015610787575060005460ff166001145b6107ea5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610377565b6000805460ff19166001179055801561080d576000805461ff0019166101001790555b610815610c70565b61081d610c9f565b60ca80546001600160a01b0319166001600160a01b03841617905580156104b5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60ca546001600160a01b031633146108ef5760405162461bcd60e51b815260206004820152602b60248201527f4f6e6c792074686520636f6f7264696e61746f72206e6f64652063616e20737560448201526a626d697420626c6f636b7360a81b6064820152608401610377565b60c980549060006108ff83611a40565b91905055508181604051610914929190611a59565b60405190819003902060cb55600061092e83836012610cc6565b60cb5460c98054600090815260cc60209081526040808320949094558254825260cd81528382208590559154815260ce90915281812042905590519192507fcdf35dca8304861a13f78fcd9aa4cbe5bd689d13c643b4c875cccbfae3cbf67c91a1505050565b61099c610b9e565b6001600160a01b038116610a015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610377565b6103fd81610bf8565b60008051602061234e833981519152546001600160a01b031690565b6103fd610b9e565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610a6657610a6183611003565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ac0575060408051601f3d908101601f19168201909252610abd91810190611a69565b60015b610b235760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610377565b60008051602061234e8339815191528114610b925760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610377565b50610a6183838361109f565b6033546001600160a01b0316331461057e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610377565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081600003610c5c57506000919050565b610c67600183611a82565b90911615919050565b600054610100900460ff16610c975760405162461bcd60e51b815260040161037790611a95565b61057e6110ca565b600054610100900460ff1661057e5760405162461bcd60e51b815260040161037790611a95565b600060038210158015610cda575060408211155b610d265760405162461bcd60e51b815260206004820152601960248201527f72616e6765206f66206c6f673253697a653a205b332c36345d000000000000006044820152606401610377565b6000839003610d4957610d42610d3d600384611a82565b6110fa565b9050610708565b6000610d56600384611a82565b6001901b9050600381901b841115610db05760405162461bcd60e51b815260206004820152601960248201527f6461746120697320626967676572207468616e206472697665000000000000006044820152606401610377565b6000610dbf600386901c61118b565b610dca906002611ae0565b60ff16905060008167ffffffffffffffff811115610dea57610dea611764565b604051908082528060200260200182016040528015610e13578160200160208202803683370190505b5090506000806000805b86841015610f9a57600384901b8a1115610e6e57610e3c8b8b866111f7565b858481518110610e4e57610e4e611a01565b602090810291909101015283610e6381611a40565b945050839150610eb4565b610e7784611342565b9050610e82816110fa565b858481518110610e9457610e94611a01565b6020908102919091010152610eac6001821b85611a2d565b935083811c91505b82610ebe81611a40565b9350505b81600116600003610f9557600085610edb600186611a82565b81518110610eeb57610eeb611a01565b60200260200101519050600086600286610f059190611a82565b81518110610f1557610f15611a01565b602002602001015190508082604051602001610f3b929190918252602082015260400190565b6040516020818303038152906040528051906020012087600287610f5f9190611a82565b81518110610f6f57610f6f611a01565b6020908102919091010152610f85600186611a82565b9450600184901c93505050610ec2565b610e1d565b82600114610fd85760405162461bcd60e51b815260206004820152600b60248201526a39ba30b1b59032b93937b960a91b6044820152606401610377565b84600081518110610feb57610feb611a01565b60200260200101519750505050505050509392505050565b6001600160a01b0381163b6110705760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610377565b60008051602061234e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6110a883611467565b6000825111806110b55750805b15610a61576110c483836114a7565b50505050565b600054610100900460ff166110f15760405162461bcd60e51b815260040161037790611a95565b61057e33610bf8565b600080611108836020611af9565b9050611115816020611a2d565b6107a0101561115c5760405162461bcd60e51b8152602060048201526013602482015272696e646578206f7574206f6620626f756e647360681b6044820152606401610377565b600080604051806107c001604052806107a08152602001611bae6107a091399290920160200151949350505050565b6000816000036111dd5760405162461bcd60e51b815260206004820152601860248201527f6c6f67206f66207a65726f20697320756e646566696e656400000000000000006044820152606401610377565b6111e68261159b565b6111f19060ff611a82565b92915050565b6000600382901b8161120a600883611a2d565b9050848211156112515760405162461bcd60e51b8152602060048201526012602482015271776f7264206f7574206f6620626f756e647360701b6044820152606401610377565b8481116112945761126481838789611b10565b604051602001611275929190611a59565b6040516020818303038152906040528051906020012092505050610708565b60408051600880825281830190925260009160208201818036833701905050905060006112c18488611a82565b905060005b8181101561132e5788886112da8388611a2d565b8181106112e9576112e9611a01565b9050013560f81c60f81b83828151811061130557611305611a01565b60200101906001600160f81b031916908160001a9053508061132681611a40565b9150506112c6565b505080516020909101209695505050505050565b6000816000036113555750610100919050565b6000826fffffffffffffffffffffffffffffffff166000036113865761137c816080611a2d565b9050608083901c92505b8267ffffffffffffffff166000036113ad576113a3816040611a2d565b9050604083901c92505b8263ffffffff166000036113d0576113c6816020611a2d565b9050602083901c92505b8261ffff166000036113f1576113e7816010611a2d565b9050601083901c92505b8260ff1660000361141157611407816008611a2d565b9050600883901c92505b82600f1660000361143157611427816004611a2d565b9050600483901c92505b8260031660000361145157611447816002611a2d565b9050600283901c92505b826001166000036111f157610708816001611a2d565b61147081611003565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61150f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610377565b600080846001600160a01b03168460405161152a9190611b5e565b600060405180830381855af49150503d8060008114611565576040519150601f19603f3d011682016040523d82523d6000602084013e61156a565b606091505b5091509150611592828260405180606001604052806027815260200161236e602791396116db565b95945050505050565b6000816000036115ae5750610100919050565b6000826fffffffffffffffffffffffffffffffff19166000036115e0576115d6816080611a2d565b9050608083901b92505b826001600160c01b031916600003611607576115fd816040611a2d565b9050604083901b92505b826001600160e01b03191660000361162e57611624816020611a2d565b9050602083901b92505b826001600160f01b0319166000036116555761164b816010611a2d565b9050601083901b92505b826001600160f81b03191660000361167c57611672816008611a2d565b9050600883901b92505b82600f60fc1b1660000361169f57611695816004611a2d565b9050600483901b92505b82600360fe1b166000036116c2576116b8816002611a2d565b9050600283901b92505b82600160ff1b166000036111f157610708816001611a2d565b606083156116ea575081610708565b61070883838151156116ff5781518083602001fd5b8060405162461bcd60e51b81526004016103779190611b7a565b80356001600160a01b038116811461070f57600080fd5b60006020828403121561174257600080fd5b61070882611719565b60006020828403121561175d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117a3576117a3611764565b604052919050565b600080604083850312156117be57600080fd5b6117c783611719565b915060208084013567ffffffffffffffff808211156117e557600080fd5b818601915086601f8301126117f957600080fd5b81358181111561180b5761180b611764565b61181d601f8201601f1916850161177a565b9150808252878482850101111561183357600080fd5b80848401858401376000848284010152508093505050509250929050565b6000602080838503121561186457600080fd5b823567ffffffffffffffff8082111561187c57600080fd5b818501915085601f83011261189057600080fd5b8135818111156118a2576118a2611764565b8060051b91506118b384830161177a565b81815291830184019184810190888411156118cd57600080fd5b938501935b838510156118eb578435825293850193908501906118d2565b98975050505050505050565b6000806020838503121561190a57600080fd5b823567ffffffffffffffff8082111561192257600080fd5b818501915085601f83011261193657600080fd5b81358181111561194557600080fd5b86602082850101111561195757600080fd5b60209290920196919550909350505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156111f1576111f1611a17565b600060018201611a5257611a52611a17565b5060010190565b8183823760009101908152919050565b600060208284031215611a7b57600080fd5b5051919050565b818103818111156111f1576111f1611a17565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60ff81811683821601908111156111f1576111f1611a17565b80820281158282048414176111f1576111f1611a17565b60008085851115611b2057600080fd5b83861115611b2d57600080fd5b5050820193919092039150565b60005b83811015611b55578181015183820152602001611b3d565b50506000910152565b60008251611b70818460208701611b3a565b9190910192915050565b6020815260008251806020840152611b99816040850160208701611b3a565b601f01601f1916919091016040019291505056fe011b4d03dd8c01f1049143cf9c4c817e4b167f1d1b83e5c6f0f10d89ba1e7bce4d9470a821fbe90117ec357e30bad9305732fb19ddf54a07dd3e29f440619254ae39ce8537aca75e2eff3e38c98011dfe934e700a0967732fc07b430dd656a233fc9a15f5b4869c872f81087bb6104b7d63e6f9ab47f2c43f3535eae7172aa7f17d2dd614cddaa4d879276b11e0672c9560033d3e8453a1d045339d34ba601b9c37b8b13ca95166fb7af16988a70fcc90f38bf9126fd833da710a47fb37a55e68e7a427fa943d9966b389f4f257173676090c6e95f43e2cb6d65f8758111e30930b0b9deb73e155c59740bacf14a6ff04b64bb8e201a506409c3fe381ca4ea90cd5deac729d0fdaccc441d09d7325f41586ba13c801b7eccae0f95d8f3933efed8b96e5b7f6f459e9cb6a2f41bf276c7b85c10cd4662c04cbbb365434726c0a0c9695393027fb106a8153109ac516288a88b28a93817899460d6310b71cf1e6163e8806fa0d4b197a259e8c3ac28864268159d0ac85f8581ca28fa7d2c0c03eb91e3eee5ca7a3da2b3053c9770db73599fb149f620e3facef95e947c0ee860b72122e31e4bbd2b7c783d79cc30f60c6238651da7f0726f767d22747264fdb046f7549f26cc70ed5e18baeb6c81bb0625cb95bb4019aeecd40774ee87ae29ec517a71f6ee264c5d761379b3d7d617ca83677374b49d10aec50505ac087408ca892b573c267a712a52e1d06421fe276a03efb1889f337201110fdc32a81f8e152499af665835aabfdc6740c7e2c3791a31c3cdc9f5ab962f681b12fc092816a62f27d86025599a41233848702f0cfc0437b445682df51147a632a0a083d2d38b5e13e466a8935afff58bb533b3ef5d27fba63ee6b0fd9e67ff20af9d50deee3f8bf065ec220c1fd4ba57e341261d55997f85d66d32152526736872693d2b437a233e2337b715f6ac9a6a272622fdc2d67fcfe1da3459f8dab4ed7e40a657a54c36766c5e8ac9a88b35b05c34747e6507f6b044ab66180dc76ac1a696de03189593fedc0d0dbbd855c8ead673544899b0960e4a5a7ca43b4ef90afe607de7698caefdc242788f654b57a4fb32a71b335ef6ff9a4cc118b282b53bdd6d6192b7a82c3c5126b9c7e33c8e5a5ac9738b8bd31247fb7402054f97b573e8abb9faad219f4fd085aceaa7f542d787ee4196d365f3cc566e7bbcfbfd451230c48d804c017d21e2d8fa914e2559bb72bf0ab78c8ab92f00ef0d0d576eccdd486b64138a4172674857e543d1d5b639058dd908186597e366ad5f3d9c7ceaff44d04d1550b8d33abc751df07437834ba5acb32328a396994aebb3c40f759c2d6d7a3cb5377e55d5d218ef5a296dda8ddc355f3f50c3d0b660a51dfa4d98a6a5a33564556cf83c1373a814641d6a1dcef97b883fee61bb84fe60a3409340217e629cc7e4dcc93b85d8820921ff5826148b60e6939acd7838e1d7f20562bff8ee4b5ec4a05ad997a57b9796fdcb2eda87883c2640b072b140b946bfdf6575cacc066fdae04f6951e63624cbd316a677cad529bbe4e97b9144e4bc06c4afd1de55dd3e1175f90423847a230d34dfb71ed56f2965a7f6c72e6aa33c24c303fd67745d632656c5ef90bec80f4f5d1daa251988826cef375c81c36bf457e09687056f924677cb0bccf98dff81e014ce25f2d132497923e267363963cdf4302c5049d63131dc03fd95f65d8b6aa5934f817252c028c90f56d413b9d5d10d89790707dae2fabb249f649929927c21dd71e3f656826de5451c5da375aadecbd59d5ebf3a31fae65ac1b316a1611f1b276b26530f58d7247df459ce1f86db1d734f6f811932f042cee45d0e455306d01081bc3384f82c5fb2aacaa19d89cdfa46cc916eac61121475ba2e6191b4feecbe1789717021a158ace5d06744b40f551076b67cd63af60007f8c99876e1424883a45ec49d497ddaf808a5521ca74a999ab0b3c7aa9c80f85e93977ec61ce68b20307a1a81f71ca645b568fcd319ccbb5f651e87b707d37c39e15f945ea69e2f7c7d2ccc85b7e654c07e96f0636ae4044fe0e38590b431795ad0f8647bdd613713ada493cc17efd313206380e6a685b8198475bbd021c6e9d94daab2214947127506073e44d5408ba166c512a0b86805d07f5a44d3c41706be2bc15e712e55805248b92e8677d90f6d284d1d6ffaff2c430657042a0e82624fa3717b06cc0a6fd12230ea586dae83019fb9e06034ed2803c98d554b93c9a52348cafff75c40174a91f9ae6b8647854a156029f0b88b83316663ce574a4978277bb6bb27a31085634b6ec78864b6d8201c7e93903d75815067e378289a3d072ae172dafa6a452470f8d645bebfad9779594fc0784bb764a22e3a8181d93db7bf97893c414217a618ccb14caa9e92e8c61673afc9583662e812adba1f87a9c68202d60e909efab43c42c0cb00695fc7f1ffe67c75ca894c3c51e1e5e731360199e600f6ced9a87b2a6a87e70bf251bb5075ab222138288164b2eda727515ea7de12e2496d4fe42ea8d1a120c03cf9c50622c2afe4acb0dad98fd62d07ab4e828a94495f6d1ab973982c7ccbe6c1fae02788e4422ae22282fa49cbdb04ba54a7a238c6fc41187451383460762c06d1c8a72b9cd718866ad4b689e10c9a8c38fe5ef045bd785b01e980fc82c7e3532ce81876b778dd9f1ceeba4478e86411fb6fdd790683916ca832592485093644e8760cd7b4c01dba1ccc82b661bf13f0e3f34acd6b88360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cbfcb3672c58757d96b856d138f2833c0aa56248cec8f6c1e392f2895a37454464736f6c63430008110033";

type DatachainV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DatachainV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DatachainV1__factory extends ContractFactory {
  constructor(...args: DatachainV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DatachainV1> {
    return super.deploy(overrides || {}) as Promise<DatachainV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DatachainV1 {
    return super.attach(address) as DatachainV1;
  }
  override connect(signer: Signer): DatachainV1__factory {
    return super.connect(signer) as DatachainV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DatachainV1Interface {
    return new utils.Interface(_abi) as DatachainV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DatachainV1 {
    return new Contract(address, _abi, signerOrProvider) as DatachainV1;
  }
}
